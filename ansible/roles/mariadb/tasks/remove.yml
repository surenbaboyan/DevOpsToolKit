---
- name: "Ensure backup directory exists for MariaDB"
  ignore_errors: "yes"
  ansible.builtin.file:
    path: "{{ MYSQL_DUMPS_TARGET_PATH }}/{{ MYSQL_DB_NAME }}-{{ lookup('pipe','date +%Y-%m-%d_%H-%M') }}"
    state: "directory"
    mode: "0755"
    recurse: "true"

- name: "Dump the MariaDB database"
  ansible.builtin.shell: "mysqldump -u root --password={{ MYSQL_ROOT_PASSWORD }} --databases {{ MYSQL_DB_NAME }} > {{ MYSQL_DUMPS_TARGET_PATH }}/{{ MYSQL_DB_NAME }}-{{ lookup('pipe','date +%Y-%m-%d_%H-%M') }}/dump.sql"

- name: "Stop and disable MariaDB service"
  ansible.builtin.service:
    name: "mariadb"
    state: "stopped"
    enabled: "false"

- name: "Remove mariadb via apt"
  ansible.builtin.apt:
    name: "mariadb-server"
    state: "absent"
    purge: "true"
    autoremove: "true"
  register: "apt_action"
  retries: "50"
  until: "apt_action is success or ('E: Could not get lock /var/lib/dpkg/lock-frontend' not in apt_action.msg and '/var/lib/dpkg/lock-frontend' not in apt_action.msg)"

- name: "Remove mysql user"
  ansible.builtin.user:
    name: "mysql"
    state: "absent"

- name: "Remove MariaDB DB and conf files"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"
  loop:
    - "{{ MYSQL_CONF_PATH}}"
    - "{{ MYSQL_DATA_PATH }}"