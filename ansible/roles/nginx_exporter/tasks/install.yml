---
- name: "Get current OS architecture"
  shell: "dpkg --print-architecture"
  register: "OS_ARCHITECTURE"
  tags:
    - "install_nginx_exporter"
    - "install_nginxlog_exporter"
    - "update_nginx_exporter"
    - "update_nginxlog_exporter"

- name: "Install/Update nginx_exporter"
  tags:
    - "install_nginx_exporter"
    - "update_nginx_exporter"
  block:
    - name: "Create nginx_exporter system group"
      ansible.builtin.group:
        name: "nginx_exporter"
        state: "present"
        system: "true"

    - name: "Create nginx_exporter system user"
      ansible.builtin.user:
        name: "nginx_exporter"
        group: "nginx_exporter"
        shell: "/sbin/nologin"
        system: "true"
        create_home: "false"

    - name: "Create dist directory for nginx_exporter"
      ansible.builtin.file:
        path: "/tmp/nginx_exporter"
        state: "directory"

    - name: "Download and unpack nginx_exporter binaries"
      ansible.builtin.unarchive:
        src: "https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ NGINX_EXPORTER_VERSION }}/nginx-prometheus-exporter_{{ NGINX_EXPORTER_VERSION }}_linux_{{ OS_ARCHITECTURE.stdout }}.tar.gz"
        dest: "/tmp/nginx_exporter"
        owner: "root"
        group: "root"
        remote_src: "yes"
      register: "download_archive"
      until: "download_archive is succeeded"
      retries: "5"
      delay: "2"

    - name: "Copy nginx exporter binary file"
      ansible.builtin.copy:
        src: "/tmp/nginx_exporter/nginx-prometheus-exporter"
        dest: "{{ NGINX_EXPORTER_INSTALL_DIR }}/nginx_exporter"
        mode: "0755"
        owner: "root"
        group: "root"
        remote_src: "yes"

    - name: "Remove nginx_exporter download files"
      ansible.builtin.file:
        path: "/tmp/nginx_exporter"
        state: "absent"

    - name: "Copy the nginx_exporter systemd service file"
      ansible.builtin.template:
        src: "nginx_exporter.service.j2"
        dest: "{{ NGINX_EXPORTER_SERVICE_FILE_PATH }}/nginx_exporter.service"
        owner: "nginx_exporter"
        group: "nginx_exporter"
        mode: "0644"
  notify:
    - "Restart nginx_exporter"

- name: "Install nginxlog_exporter"
  tags:
    - "install_nginxlog_exporter"
    - "update_nginxlog_exporter"
  block:
  - name: "Create nginxlog_exporter system group"
    ansible.builtin.group:
      name: "{{ NGINXLOG_EXPORTER_GROUP }}"
      state: "present"
      system: "true"

  - name: "Create nginxlog_exporter system user"
    ansible.builtin.user:
      name: "{{ NGINXLOG_EXPORTER_USER }}"
      groups: "{{ NGINXLOG_EXPORTER_GROUP }},adm"
      shell: "/sbin/nologin"
      system: "true"
      create_home: "false"

  - name: "Create config directory for nginxlog_exporter"
    ansible.builtin.file:
      path: "{{ NGINXLOG_EXPORTER_CONFIG_PATH }}"
      state: "directory"

  - name: "download binary file"
    ansible.builtin.unarchive:
      src: "https://github.com/martin-helmich/prometheus-nginxlog-exporter/releases/download/v{{ NGINXLOG_EXPORTER_VERSION }}/prometheus-nginxlog-exporter_{{ NGINXLOG_EXPORTER_VERSION }}_linux_{{ OS_ARCHITECTURE.stdout }}.tar.gz"
      dest: "{{ NGINXLOG_EXPORTER_BINARY_INSTALL_DIR }}"
      owner: "root"
      group: "root"
      remote_src: "yes"
    register: "download_archive"
    until: "download_archive is succeeded"
    retries: "5"
    delay: "2"

  - name: "Copy the nginxlog_exporter systemd service file"
    ansible.builtin.template:
      src: "nginxlog_exporter.service.j2"
      dest: "{{ NGINXLOG_EXPORTER_SERVICE_FILE_PATH }}/nginxlog_exporter.service"
      owner: "root"
      group: "root"
      mode: "0644"
  notify: "Restart nginxlog_exporter"