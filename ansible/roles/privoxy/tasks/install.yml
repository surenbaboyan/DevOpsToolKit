---
- name: "Download and Unarchive privoxy"
  ansible.builtin.unarchive:
    src: "https://www.silvester.org.uk/privoxy/Sources/{{ PRIVOXY_VERSION }}%20%28stable%29/privoxy-{{ PRIVOXY_VERSION }}-stable-src.tar.gz"
    dest: "/tmp"
    remote_src: "yes"

- name: "Ensure group privoxy exists"
  ansible.builtin.group:
    name: "privoxy"
    state: "present"

- name: "Create privoxy user and group"
  user:
    name: "privoxy"
    groups: "privoxy"
    create_home: no
    append: "yes"

- name: "Install needed apps"
  ansible.builtin.apt:
    name: "{{ PRIVOXY_NEEDED_APPS }}"
    state: "present"
    update_cache: "yes"

- name: "Run autoheader"
  ansible.builtin.shell: "autoheader"
  args:
    chdir: "/tmp/privoxy-{{ PRIVOXY_VERSION }}-stable"

- name: "Run autoconf"
  ansible.builtin.shell: "autoconf"
  args:
    chdir: "/tmp/privoxy-{{ PRIVOXY_VERSION }}-stable"

- name: "Run configure"
  ansible.builtin.shell: "./configure"
  args:
    chdir: "/tmp/privoxy-{{ PRIVOXY_VERSION }}-stable"

- name: "Run make"
  ansible.builtin.shell: "make"
  args:
    chdir: "/tmp/privoxy-{{ PRIVOXY_VERSION }}-stable"

- name: "Run make install"
  ansible.builtin.shell: "make install  USER=privoxy GROUP=privoxy"
  args:
    chdir: "/tmp/privoxy-{{ PRIVOXY_VERSION }}-stable"

- name: "Ensure privoxy is started and enabled at boot."
  ansible.builtin.service:
    name: "privoxy"
    state: "started"
    enabled: "yes"

- name: "Check privoxy connection"
  ansible.builtin.command: "curl -x {{ PRIVOXY_LISTEN_ADDRESS }} 'https://icanhazip.com'"
  register: "get_proxy_ip"

- name: "Print result"
  ansible.builtin.debug:
    msg: "Privoxy working on IP: {{ get_proxy_ip.stdout }}"
  when: get_proxy_ip.stdout == PROXY_IP

- name: "Remove Privoxy source code from tmp directory"
  ansible.builtin.file:
    path: "/tmp/privoxy-{{ PRIVOXY_VERSION }}-stable"
    state: "absent"